var b=Object.defineProperty;var L=(r,e,t)=>e in r?b(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var f=(r,e,t)=>(L(r,typeof e!="symbol"?e+"":e,t),t);import{s as h,a as g}from"./index-38216a2a.js";const _=["width","height","fill"],U=["xlink:href"],T=Vue.defineComponent({__name:"MoIcon",props:{iconName:{},iconPathName:{default:"bootstrap"},width:{default:16},height:{default:16},fill:{default:"currentColor"}},setup(r){var n;const e=r,t=Vue.ref(((n=h.blobIconURL)==null?void 0:n[e.iconPathName])??""),s=Vue.computed(()=>`${t.value}#${e.iconName}`);return(async()=>{var o,a;if(t.value===""){const p="/setting/icons/icon.config.json",d="icon_config_cache@"+p,i=(await g.getWithURL(d,p,"json"))[e.iconPathName];(o=h).requestMap??(o.requestMap={}),(a=h.requestMap)[i]??(a[i]=fetch(i).then(l=>l.blob()).then(l=>{var R;const w=URL.createObjectURL(l);return(R=h).blobIconURL??(R.blobIconURL={}),h.blobIconURL[e.iconPathName]=w,w})),h.requestMap[i].then(l=>t.value=l)}})(),(o,a)=>(Vue.openBlock(),Vue.createElementBlock("svg",{width:o.width,height:o.height,fill:o.fill},[Vue.createElementVNode("use",{"xlink:href":Vue.unref(s)},null,8,U)],8,_))}}),v=(r,e)=>{const t=r.__vccOpts||r;for(const[s,n]of e)t[s]=n;return t};class m{constructor(e){f(this,"defaultOptions",{headers:{"Content-Type":"application/json"}});f(this,"requestInterceptors",[]);f(this,"responseInterceptors",[]);f(this,"responseErrorInterceptor",null);Object.assign(this.defaultOptions,e)}static create(e){return new m(e)}async get(e,t,s){return t&&(e=this.mergeURL(e,t)),this._request(e,void 0,{...s,method:"GET"})}async post(e,t,s){return this._request(e,t,{...s,method:"POST"})}async put(e,t,s){return this._request(e,t,{...s,method:"PUT"})}async delete(e,t,s){return t&&(e=this.mergeURL(e,t)),this._request(e,void 0,{...s,method:"DELETE"})}addRequestInterceptor(e){this.requestInterceptors.push(e)}addResponseInterceptor(e){this.responseInterceptors.push(e)}setResponseErrorInterceptor(e){this.responseErrorInterceptor=e}async _request(e,t,s){const n={...this.defaultOptions,body:t,...s};if(await this.runRequestInterceptors(e,n),typeof t=="object"?(n.headers=new Headers(n.headers),t instanceof FormData?n.headers.delete("Content-Type"):Object.keys(t).length>0&&((n.headers.get("Content-Type")??"").startsWith("application/x-www-form-urlencoded")?n.body=this.mergeURL("/",t).split("?")[1]:n.body=JSON.stringify(t))):t&&(n.body=t),n.timeout!==void 0){const u=new AbortController;n.signal&&(n.signal.onabort=i=>u.abort(i)),n.signal=u.signal,setTimeout(()=>u.abort("timeout"),n.timeout)}const o=await fetch(new URL(e,n.baseURL),n);if(o.status!==200){if(!this.responseErrorInterceptor)throw new Error(o.statusText);return await this.responseErrorInterceptor(o,n)}let a;const p=o.headers.get("Content-Type")??"";p.startsWith("application/json")?a=await o.json():p.startsWith("application/octet-stream")?a=await o.blob():a=await o.text();const d={...o,data:a};return await this.runResponseInterceptors(d),d.data}async runRequestInterceptors(e,t){for await(const s of this.requestInterceptors)await s(e,t)}async runResponseInterceptors(e){for await(const t of this.responseInterceptors){const s=await t(e);s&&(e.data=s)}}mergeURL(e,t){const s=new URL(e,"http://localhost");for(const[n,o]of Object.entries(t))o instanceof Array?o.forEach(a=>s.searchParams.append(n,String(a))):o&&s.searchParams.append(n,String(o));return e.startsWith("http")?s.href:s.href.replace("http://localhost","")}}const I="/mossm/login",c=m.create({baseURL:new URL(location.href).origin,timeout:1e4});c.addRequestInterceptor(async(r,e)=>{const t=await g.get("token");t&&(e.headers=new Headers(e.headers),e.headers.set("Authorization","Bearer "+t))});c.addResponseInterceptor(r=>{const{code:e,message:t,data:s}=r.data;if(e!==0)throw new Error(t);return s});c.setResponseErrorInterceptor(async(r,e)=>{if(r.status!==401)throw new Error(r.statusText);const{pathname:t}=new URL(r.url);if(t===I)throw new Error(r.statusText);let{token:s}=await c.post(I);return g.set("token",s),await c[e.method.toLowerCase()](r.url,void 0,e)});const y={login:"/mossm/login",chsetting:"/mossm/chsetting"},k={login:async(r,e)=>c.post(y.login,{username:r,password:e}),chsetting:async r=>c.post(y.chsetting,r)};export{T as _,v as a,k as b,c as s};
