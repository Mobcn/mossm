var b=Object.defineProperty;var R=(o,t,e)=>t in o?b(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var l=(o,t,e)=>(R(o,typeof t!="symbol"?t+"":t,e),e);import{s as u,a as w}from"./index-79d0d0a7.js";const I="https://cdn.staticfile.org/bootstrap-icons/1.9.1/bootstrap-icons.svg",y={bootstrap:I},L=["width","height","fill"],_=["xlink:href"],q=Vue.defineComponent({__name:"MoIcon",props:{iconName:{},iconPathName:{default:"bootstrap"},width:{default:16},height:{default:16},fill:{default:"currentColor"}},setup(o){var r;const t=o,e=Vue.ref(((r=u.blobIconURL)==null?void 0:r[t.iconPathName])??""),s=Vue.computed(()=>`${e.value}#${t.iconName}`);return(()=>{var n,a;if(e.value===""){const i=y[t.iconPathName];(n=u).requestMap??(n.requestMap={}),(a=u.requestMap)[i]??(a[i]=fetch(i).then(c=>c.blob()).then(c=>{var f;const h=URL.createObjectURL(c);return(f=u).blobIconURL??(f.blobIconURL={}),u.blobIconURL[t.iconPathName]=h,h})),u.requestMap[i].then(c=>e.value=c)}})(),(n,a)=>(Vue.openBlock(),Vue.createElementBlock("svg",{width:n.width,height:n.height,fill:n.fill},[Vue.createElementVNode("use",{"xlink:href":Vue.unref(s)},null,8,_)],8,L))}}),T=(o,t)=>{const e=o.__vccOpts||o;for(const[s,r]of t)e[s]=r;return e};class d{constructor(t){l(this,"defaultOptions",{headers:{"Content-Type":"application/json"}});l(this,"requestInterceptors",[]);l(this,"responseInterceptors",[]);l(this,"responseErrorInterceptor",null);Object.assign(this.defaultOptions,t)}static create(t){return new d(t)}async get(t,e,s){return e&&(t=this.mergeURL(t,e)),this._request(t,void 0,{...s,method:"GET"})}async post(t,e,s){return this._request(t,e,{...s,method:"POST"})}async put(t,e,s){return this._request(t,e,{...s,method:"PUT"})}async delete(t,e,s){return e&&(t=this.mergeURL(t,e)),this._request(t,void 0,{...s,method:"DELETE"})}addRequestInterceptor(t){this.requestInterceptors.push(t)}addResponseInterceptor(t){this.responseInterceptors.push(t)}setResponseErrorInterceptor(t){this.responseErrorInterceptor=t}async _request(t,e,s){const r={...this.defaultOptions,body:e,...s};if(await this.runRequestInterceptors(t,r),typeof e=="object"?(r.headers=new Headers(r.headers),e instanceof FormData?r.headers.delete("Content-Type"):Object.keys(e).length>0&&((r.headers.get("Content-Type")??"").startsWith("application/x-www-form-urlencoded")?r.body=this.mergeURL("/",e).split("?")[1]:r.body=JSON.stringify(e))):e&&(r.body=e),r.timeout!==void 0){const h=new AbortController;r.signal&&(r.signal.onabort=f=>h.abort(f)),r.signal=h.signal,setTimeout(()=>h.abort("timeout"),r.timeout)}const n=await fetch(new URL(t,r.baseURL),r);if(n.status!==200){if(!this.responseErrorInterceptor)throw new Error(n.statusText);return await this.responseErrorInterceptor(n,r)}let a;const i=n.headers.get("Content-Type")??"";i.startsWith("application/json")?a=await n.json():i.startsWith("application/octet-stream")?a=await n.blob():a=await n.text();const c={...n,data:a};return await this.runResponseInterceptors(c),c.data}async runRequestInterceptors(t,e){for await(const s of this.requestInterceptors)await s(t,e)}async runResponseInterceptors(t){for await(const e of this.responseInterceptors){const s=await e(t);s&&(t.data=s)}}mergeURL(t,e){const s=new URL(t,"http://localhost");for(const[r,n]of Object.entries(e))n instanceof Array?n.forEach(a=>s.searchParams.append(r,String(a))):n&&s.searchParams.append(r,String(n));return t.startsWith("http")?s.href:s.href.replace("http://localhost","")}}const m="/mossm/login",p=d.create({baseURL:new URL(location.href).origin,timeout:1e4});p.addRequestInterceptor((o,t)=>{const e=w.get("token");e&&(t.headers=new Headers(t.headers),t.headers.set("Authorization","Bearer "+e))});p.addResponseInterceptor(o=>{const{code:t,message:e,data:s}=o.data;if(t!==0)throw new Error(e);return s});p.setResponseErrorInterceptor(async(o,t)=>{if(o.status!==401)throw new Error(o.statusText);const{pathname:e}=new URL(o.url);if(e===m)throw new Error(o.statusText);let{token:s}=await p.post(m);return w.set("token",s),await p[t.method.toLowerCase()](o.url,void 0,t)});const g={login:"/mossm/login",chsetting:"/mossm/chsetting"},v={login:async(o,t)=>p.post(g.login,{username:o,password:t}),chsetting:async o=>p.post(g.chsetting,o)};export{q as _,T as a,v as b,p as s};
